<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<!-- springmvc的配置文件 什么时候加载该配置文件？ 当tomcat启动时，会自动加载springmvc配置文件 默认的配置文件名称：web.xml中的前端总控制器servlet-name名称来命名 
		默认的配置文件名称：servlet-name(springMVC)-servlet.xml -->

	<!-- 扫控制器包，扫类中带有@Controller注解的类，并创建该类的控制器对象 -->
	<context:component-scan
		base-package="com.emp.controller">
		</context:component-scan>

	<!-- 配置注解驱动，隐式创建了HandlerMapping和HandlerAdapter对象，后续很多功能都要依赖于此注解驱动配置 -->
	<!-- <mvc:annotation-driven /> -->
	<!-- <mvc:annotation-driven /> 会自动会创建验证所需要的对象和转换类型的所需要的对象 validator="validator" 
		conversion-service="conversion-service" 装载自定义的验证对象和类型转换对象 -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversion-service">
		<mvc:message-converters
			register-defaults="true">
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 实例化转换和格式化的对象 -->
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

	<!-- 实例化验证对象 LocalValidatorFactoryBean 本地验证的工厂类 org.springframework.context-3.1.1.RELEASE.jar包中 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- HibernateValidator 第三方的hibernate-validator-4.3.2.Final.jar中，真正的jsr303验证 -->
		<property name="providerClass"
			value="org.hibernate.validator.HibernateValidator" />
		<!--不设置则默认为classpath下的 ValidationMessages.properties -->
		<!-- 加载验证消息的配置文件对象 -->
		<property name="validationMessageSource"
			ref="validatemessageSource" />
	</bean>



	<!-- 实例化配置文件对象 -->
	<bean id="validatemessageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename"
			value="classpath:ValidationMessages" />
		<property name="fileEncodings" value="utf-8" />
		<property name="cacheSeconds" value="120" />
	</bean>

	<!-- 创建视图解析器对象 此配置说明jsp作为显示页面技术，并且可以使用jstl -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

<mvc:default-servlet-handler/> 
</beans>